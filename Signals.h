#ifndef _SIGNALS_H
#define _SIGNALS_H
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <Arduino.h>
#include "Core.h"
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
 Подумаем над типами записей в конфиге, управляющих сигналами:

  1. Слежение за показаниями в хранилище: активен (маска дней недели, диапазон времени), имя датчика (если не указано - ни за чем не следим), параметры сравнения (попадание в диапазон, совпадение, меньше, больше), 
     действия, например: установить сигналы (номера сигналов), сбросить сигналы (номера сигналов);
     
 
 */
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifdef CORE_SIGNALS_ENABLED
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define CORE_SIGNAL_BYTES 10 // кол-во байт под сигналы
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Signal
{
  public:
  
    Signal();
    
    operator bool();

   void reset(); // сбрасывает сигнал
   void raise(); // устанавливает сигнал

   void setNumber(uint8_t signalNumber);


   Signal& operator=(bool val);
   Signal& operator=(uint8_t val);
   Signal& operator=(uint16_t val);
   Signal& operator=(uint32_t val);
   Signal& operator=(int8_t val);
   Signal& operator=(int16_t val);
   Signal& operator=(int32_t val);


  private:

    uint8_t signalNumber;
    
    uint8_t get();
    void set(uint8_t val);
    void offset(uint8_t& byteNum, uint8_t& bitNum);
    
}; 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class SignalsManager
{
  public:
    SignalsManager();

    Signal& operator[](uint8_t signalNumber);

    void reset();
    void begin();
    void update();

  private:

    Signal thisSignal;
  
}; 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
extern SignalsManager Signals;
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#endif // CORE_SIGNALS_ENABLED
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#endif
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
